@model IEnumerable<Cosmetics_Shopping_Website.GenericPattern.ViewModels.ProductVM>

@{
    Layout = "/Views/Shared/AdminNav.cshtml";
    ViewData["Title"] = "Index";
}

<body>

    <div class="row">
        <div>
            <div class="container-fluid mt-2 "> 
                <br />
                <!-- row  -->
                <div class="row mb-6">

                    <div class="col-md-12 mt-6">
                        <!-- card  -->
                        <div class="card">
                            <!-- card header  -->
                            <div class="card-header bg-white  py-4">
                                <div>

                                    <h4 class="mb-0 float-start">Products</h4>
                                    <a asp-action="Create" class="btn btn-primary float-end">Add Product</a>

                                </div><br />
                            </div>
                            <!-- table  -->
                            <div class="table-responsive">
                                <br />
                                <table class="table text-nowrap mt-4" id="table_list">
                                    <thead class="table-light">
                                        <tr>
                                            <th> @Html.DisplayNameFor(model => model.Category)</th>
                                            <th> @Html.DisplayNameFor(model => model.SubCategory)</th>
                                            <th> @Html.DisplayNameFor(model => model.ProductName)</th>

                                            <th> Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var item in Model)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.Category)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.SubCategory)
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(modelItem => item.ProductName)
                                                </td>

                                                <td>

                                                    <a asp-action="Edit" asp-route-id="@item.Id"><i class="fas fa-edit" data-mdb-toggle="tooltip" title="Edit"></i></a>
                                                    <a asp-action="Details" asp-route-id="@item.Id"><i class="fa fa-info-circle" aria-hidden="true" data-mdb-toggle="tooltip" title="View Details"></i></a>
                                                    <a class="delete-icon" data-id="@item.Id">
                                                        <i class="fa fa-trash" aria-hidden="true" data-mdb-toggle="tooltip" title="Delete"></i>
                                                    </a>
                                                </td>
                                            </tr>
                                           
                                        }
                                    </tbody>
                                </table>
                              
                            </div>
                           
                        </div>

                    </div>
                </div>
                <br />

            </div>
        </div>
    </div>
    

    @section scripts{
        <script>
           

            $(document).ready(function () {
                $('#table_list').DataTable();

                $('.delete-icon').click(function () {
                    var itemId = $(this).data('id');

                    Swal.fire({
                        title: 'Confirm Delete',
                        text: 'Are you sure you want to delete this item?',
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#d33',
                        cancelButtonColor: '#3085d6',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            // AJAX call to delete action
                            $.ajax({
                                url: '@Url.Action("DeleteConfirmed", "Products")',
                                data: { id: itemId },
                                type: 'POST',
                                success: function () {
                                    // Optionally show success message
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'Success',
                                        text: 'Item has been deleted successfully!',
                                        confirmButtonColor: '#28a745'
                                    }).then(function () {
                                        // Reload the page
                                        location.reload();
                                    });
                                },
                                error: function () {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Error',
                                        text: 'An error occurred while deleting the item.',
                                        confirmButtonColor: '#d33'
                                    });
                                }
                            });
                        }
                    });
                });
            });
        </script>
    }

   


</body>
